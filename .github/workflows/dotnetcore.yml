name: .NET Core

on: [push]

env:
  configuration: Release
  signTool: '"C:\\Program Files (x86)\\Windows Kits\\10\bin\\10.0.18362.0\\x86\\signtool.exe"'
  platform: x86

jobs:
  build:
    
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Setup MSBuild.exe
      uses: warrenbuckley/Setup-MSBuild@v1
  
    - name: Use Nerdbank.GitVersioning to set version variables
      uses: aarnott/nbgv@v0.3
      with:
        setAllVars: true
    
    - name: Update manifest version
      run: |
        [xml]$manifest = get-content ".\ContosoExpenses.Package\Package.appxmanifest"
        $manifest.Package.Identity.Version = "${{env.NBGV_SIMPLEVERSION}}.0"
        $manifest.save(".\ContosoExpenses.Package\Package.appxmanifest")
    
    - name: Build
      run: msbuild ContosoExpenses.sln /p:Configuration=${{env.configuration}} /p:Platform=${{env.platform}} /restore /p:AppxPackageDir=${{github.workspace}}\AppPackages /p:AppxBundlePlatforms=${{env.platform}} /p:AppxBundle=Never /p:UapAppxPackageBuildMode=SideloadOnly /p:AppxPackageSigningEnabled=false
            
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: MSIX
        # Directory containing files to upload
        path: AppPackages
        
  deploy:
    needs: build
    name: Deploy Packages
    runs-on: ubuntu-latest
    steps:
      - name: Download Package artifact
        uses: actions/download-artifact@master
        with:
          name: MSIX
          path: MSIX
        
      - name: Get certificate
        id: cert_file
        uses: timheuer/base64-to-file@master
        with:
          fileName: 'certfile.pfx'
          encodedString: ${{ secrets.signingCert }}
      
      - name: Install AzureSignTool
        run: dotnet tool install --global AzureSignTool --version 2.0.17
          
      - name: Sign package
        run: |
             Get-ChildItem -recurse -Include *.msix | ForEach-Object {
             $msixPath = $_.FullName
             & AzureSignTool sign -kvu https://contosoexpenses.vault.azure.net/ -kvi "${{ secrets.AzureClientId }}" -kvs "${{ secrets.AzureClientSecret }}" -kvc MyCertificate -tr http://timestamp.digicert.com -v $msixPath
             }

      - name: Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v0.0.1-preview
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_SALMON_FIELD_00E8D4803 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: 'upload'
          ###### Repository/Build Configurations - These values can be configured to match you app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig 
          app_location: '/' # App source code path
          app_artifact_location: 'MSIX' # Built app content directory - optional
          ###### End of Repository/Build Configurations ######
