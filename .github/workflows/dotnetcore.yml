name: .NET Core

on: [push]

env:
  configuration: Release
  signTool: '"C:\\Program Files (x86)\\Windows Kits\\10\bin\\10.0.18362.0\\x86\\signtool.exe"'

jobs:
  build:
    strategy:
      matrix:
        targetPlatform: [x86, x64]

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Setup MSBuild.exe
      uses: warrenbuckley/Setup-MSBuild@v1
  
    - name: Use Nerdbank.GitVersioning to set version variables
      uses: aarnott/nbgv@v0.3
      with:
        setAllVars: true
    
    - name: Update manifest version
      run: |
        [xml]$manifest = get-content ".\ContosoExpenses.Package\Package.appxmanifest"
        $manifest.Package.Identity.Version = "${{env.NBGV_SIMPLEVERSION}}.0"
        $manifest.save(".\ContosoExpenses.Package\Package.appxmanifest")
    
    - name: Build
      run: msbuild ContosoExpenses.sln /p:Configuration=${{env.configuration}} /p:Platform=${{env.platform}} /restore /p:AppxPackageDir=${{github.workspace}}\AppPackages /p:AppxBundlePlatforms=${{env.platform}} /p:AppxBundle=Never /p:UapAppxPackageBuildMode=SideloadOnly /p:AppxPackageSigningEnabled=false
      env:
        platform: ${{ matrix.targetPlatform }}
            
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: MSIX
        # Directory containing files to upload
        path: AppPackages
        
  deploy:
    needs: build
    name: Deploy Packages
    runs-on: windows-latest
    steps:
      - name: Download Package artifact
        uses: actions/download-artifact@master
        with:
          name: MSIX
        
      - name: Get certificate
        id: cert_file
        uses: timheuer/base64-to-file@master
        with:
          fileName: 'certfile.pfx'
          encodedString: ${{ secrets.signingCert }}
      
      - name: Sign package 
        run: | 
          $signToolPath = ${{ env.signTool }}
          Get-ChildItem -recurse -path "MSIX" -Include *.msix | ForEach-Object {
            $msixPath = $_.FullName
            & ${{env.signTool}} sign /f "${{ steps.cert_file.outputs.filePath }}" /tr http://timestamp.digicert.com /p ${{ secrets.signingPassword}} /td sha256 /fd sha256 $msixPath
          }
                  
      - name: Azure Storage deploy
        uses: lauchacarro/Azure-Storage-Action@master
        with:
          enabled-static-website: 'true'
          folder: 'MSIX'
          connection-string: ${{ secrets.azureStorageConnectionString }}
